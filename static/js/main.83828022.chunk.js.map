{"version":3,"sources":["components/section/SectionWrapper.tsx","components/contact/Contact.tsx","hooks/useInput.tsx","lib/scroll.ts","static/images/logo.png","components/header/Header.tsx","components/home/Home.tsx","hooks/useInterval.tsx","components/about/ConsoleInfo.tsx","components/about/Card.tsx","components/about/About.tsx","components/skills/Skills.tsx","components/projects/DetailDialog.tsx","components/projects/Projects.tsx","components/footer/Footer.tsx","components/arrowup/ArrowUp.tsx","hooks/useHeader.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SectionWrapper","id","title","children","className","dotenv","config","path","__dirname","Contact","useInput","name","email","message","mailForm","onChangeMailForm","sendEmail","useCallback","e","preventDefault","length","emailjs","send","process","then","response","status","alert","err","console","error","onSubmit","type","placeholder","value","onChange","href","target","rel","initialForm","useState","state","setState","scrolltoLink","link","scrollTo","document","getElementById","scrollIntoView","behavior","Hamburger","onToggle","onClick","Header","active","activeHamberger","setActiveHamberger","toggleHamburger","handleScroll","currentTarget","dataset","cn","headerActive","on","src","Logo","alt","SectionList","map","navitem","index","data-link","toLowerCase","Home","splash","setSplash","useEffect","useInterval","callback","delay","interval","setInterval","clearInterval","ConsoleInfo","birth","university","underbarHidden","setUnderbarHidden","hidden","Card","job","phone","github","About","MyInfo","SkillItem","content","color","percent","setActive","progressBarRef","useRef","progressAnimation","fromTop","current","getBoundingClientRect","top","window","innerHeight","addEventListener","style","width","backgroundColor","ref","display","Skills","SkillList","SwiperCore","use","Pagination","Navigation","DetailDialog","subtitle","description","images","offDialog","techList","spaceBetween","navigation","pagination","clickable","image","join","ProjectItem","background","onDetail","backgroundImage","Projects","onDialog","setOnDialog","dialogContent","setDialogContent","openDialog","dialogInfo","log","ProjectList","project","Footer","ArrowUp","activeArrow","handleArrowUp","toLocaleLowerCase","options","root","rootMargin","threshold","sections","Sections","section","useHeaderScroll","navList","sectionList","selectedNavItem","entries","forEach","entry","isIntersecting","intersectionRatio","boundingClientRect","indexOf","selectedNavIndex","y","selected","classList","remove","add","activeNavItem","observer","useMemo","IntersectionObserver","querySelectorAll","sectionElement","push","observe","scrollController","scrollY","removeEventListener","App","setHeaderActive","header","headerHeight","height","handleHeaderScroll","useHeaderActive","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.83828022.chunk.js","sourcesContent":["import './SectionWrapper.scss';\r\n\r\ninterface SectionWrapperProps {\r\n    id: string,\r\n    title: string;\r\n    children: React.ReactNode;\r\n}\r\n\r\nfunction SectionWrapper({ id, title, children }: SectionWrapperProps) {\r\n    return (\r\n        <section className=\"section-wrapper\" id={id}>\r\n            <h1 className=\"section-title\">{title}</h1>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default SectionWrapper;\r\n","import SectionWrapper from '../section/SectionWrapper';\r\nimport emailjs from 'emailjs-com';\r\nimport './Contact.scss';\r\nimport { useCallback } from 'react';\r\nimport useInput from '../../hooks/useInput';\r\nimport dotenv from \"dotenv\";\r\ndotenv.config({ path: __dirname+'.env' });\r\n\r\nfunction Contact() {\r\n    const [mailForm, onChangeMailForm] = useInput({ name: '', email: '', message: '' });\r\n    const { name, email, message } = mailForm;\r\n    const sendEmail = useCallback((e) => {\r\n        e.preventDefault();\r\n        if(!name.length || !email.length || !message.length){\r\n            alert('입려칸에 내용을 적어주세요.')\r\n            return;\r\n        }\r\n        const USER_KEY: string = process.env.REACT_APP_EMAIL_USER || '';\r\n        const SERVIVE_KEY: string = process.env.REACT_APP_EMAIL_SERVICE || '';\r\n        const TEMPLATE_KEY: string = process.env.REACT_APP_EMAIL_TEMPLATE || '';\r\n        emailjs.send(SERVIVE_KEY, TEMPLATE_KEY, mailForm, USER_KEY).then(\r\n            (response)=>{\r\n                if(response.status === 200){\r\n                    alert('전송되었습니다! 빠른 시일내에 답변 드리겠습니다.')\r\n                }\r\n            }, (err) =>{\r\n                console.error(err);\r\n                alert('전송실패.')\r\n            }\r\n        );\r\n    }, [email.length, mailForm, message.length, name.length]);\r\n    return (\r\n        <SectionWrapper id=\"contact\" title=\"Contact\">\r\n            <div className=\"contact-container\">\r\n                <form id=\"form-email\" onSubmit={sendEmail}>\r\n                    <input type=\"name\" name=\"name\" placeholder=\"이름\" value={name} onChange={onChangeMailForm} />\r\n                    <br />\r\n                    <input type=\"email\" name=\"email\" placeholder=\"이메일\" value={email} onChange={onChangeMailForm} />\r\n                    <br />\r\n                    <textarea name=\"message\" placeholder=\"내용\" value={message} onChange={onChangeMailForm} />\r\n                    <button type=\"submit\">\r\n                        SEND MESSAGE\r\n                    </button>\r\n                </form>\r\n                <div className=\"github-link-wrapper\">\r\n                    <a className=\"github-link\" href='https://github.com/HelloMandu' target=\"_blank\" rel=\"noreferrer\">\r\n                        <i className=\"fa fa-github\"></i>\r\n                    </a>\r\n                    <p className=\"github-url\">https://github.com/HelloMandu</p>\r\n                </div>\r\n            </div>\r\n        </SectionWrapper>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n","import { useCallback, useState } from \"react\";\r\n\r\nfunction useInput(initialForm: any): any[] {\r\n    const [state, setState] = useState<any>(initialForm);\r\n    const onChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setState((state: any) => ({ ...state, [name]: value }));\r\n    }, []);\r\n    const reset = useCallback(() => setState(initialForm), [initialForm]);\r\n    return [state, onChange, reset];\r\n};\r\n\r\nexport default useInput;","export function scrolltoLink(link: string): void {\r\n    const scrollTo = document.getElementById(link);\r\n    scrollTo?.scrollIntoView({ behavior: \"smooth\" });\r\n};","export default __webpack_public_path__ + \"static/media/logo.8bada592.png\";","import { useCallback, useState } from 'react';\r\nimport cn from 'classnames';\r\nimport SectionList from '../../static/data/sections.json';\r\nimport { scrolltoLink } from '../../lib/scroll';\r\nimport Logo from '../../static/images/logo.png';\r\nimport './Header.scss';\r\n\r\ninterface HamburgerProps {\r\n    onToggle: () => void;\r\n}\r\n\r\nfunction Hamburger({ onToggle }: HamburgerProps) {\r\n    return (\r\n        <div className=\"hamburger\" onClick={onToggle}>\r\n            <div className=\"bar bar1\"></div>\r\n            <div className=\"bar bar2\"></div>\r\n            <div className=\"bar bar3\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface HeaderProps {\r\n    active: boolean;\r\n}\r\n\r\nfunction Header({ active }: HeaderProps) {\r\n    const [activeHamberger, setActiveHamberger] = useState<boolean>(false);\r\n    const toggleHamburger = useCallback(() => setActiveHamberger((state) => !state), []);\r\n\r\n    const handleScroll = useCallback((e: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\r\n        const { link } = e.currentTarget.dataset;\r\n        if (link) {\r\n            scrolltoLink(link);\r\n        }\r\n    }, []);\r\n    return (\r\n        <header id=\"header\" className={cn({ headerActive: active, on: activeHamberger })}>\r\n            <img className=\"logo\" src={Logo} alt=\"logo\" />\r\n            <nav className={cn('nav-container', { on: activeHamberger })}>\r\n                <ul className=\"navbar-menu\">\r\n                    {SectionList.map((navitem, index) => (\r\n                        <li className=\"navbar-menu-item\" data-link={navitem.toLowerCase()} key={index} onClick={handleScroll}>\r\n                            {navitem}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <Hamburger onToggle={toggleHamburger} />\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { useEffect, useState } from 'react';\r\nimport cn from 'classnames';\r\nimport Logo from '../../static/images/logo.png';\r\n\r\nimport './Home.scss';\r\n\r\nfunction Home() {\r\n    const [splash, setSplash] = useState<boolean>(false);\r\n    useEffect(() => setSplash(true), []);\r\n    return (\r\n        <section id=\"home\">\r\n            <div className={cn('home-container', { splash })}>\r\n                <img className=\"home-profile\" src={Logo} alt=\"profile\" />\r\n                <h2 className=\"home-title\">\r\n                    Hi,\r\n                    <br />\r\n                    I'm Web Developer.\r\n                </h2>\r\n                <p>\r\n                    끊임없는 배움을 통한 성장,\r\n                    <br />\r\n                    새로운 기술에 대한 지속적인 관심,\r\n                    <br />\r\n                    새로운 배움에 두려움을 두지 않는 태도\r\n                    <br />\r\n                    저는 프론트엔드 개발자입니다.\r\n                </p>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import { useEffect } from 'react';\r\n\r\nfunction useInterval(callback: () => void, delay: number): void {\r\n    useEffect(() => {\r\n        if (delay !== 0) {\r\n            const interval = setInterval(callback, delay);\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [callback, delay]);\r\n};\r\n\r\nexport default useInterval;","import { useState } from 'react';\r\nimport cn from 'classnames';\r\nimport useInterval from '../../hooks/useInterval';\r\nimport './ConsoleInfo.scss';\r\n\r\ninterface ConsoleInfoProps{\r\n    name: string,\r\n    birth: string,\r\n    university: string,\r\n}\r\n\r\nfunction ConsoleInfo({name, birth, university}: ConsoleInfoProps) {\r\n    const [underbarHidden, setUnderbarHidden] = useState<boolean>(false);\r\n    useInterval(() => setUnderbarHidden(state => !state), 500);\r\n    return (\r\n        <ul className=\"console-list\">\r\n            <li className=\"console\">\r\n                <span>Console</span>\r\n            </li>\r\n            <li className=\"console-item\">\r\n                <i className=\"fa fa-angle-right\"></i>\r\n                <span className=\"cli declare\">const</span> sungmin = <span className=\"declare\">new</span> Developer();\r\n            </li>\r\n            <li className=\"console-item response undefined\">\r\n                <i className=\"fa fa-angle-left\"></i>\r\n                <span className=\"cli\">undefined</span>\r\n            </li>\r\n            <li className=\"console-item\">\r\n                <i className=\"fa fa-angle-right\"></i>\r\n                <span className=\"cli\">\r\n                    sungmin.<span className=\"method\">getName</span>();\r\n                </span>\r\n            </li>\r\n            <li className=\"console-item response\">\r\n                <i className=\"fa fa-angle-left\"></i>\r\n                <span className=\"cli info\">{name}</span>\r\n            </li>\r\n            <li className=\"console-item\">\r\n                <i className=\"fa fa-angle-right\"></i>\r\n                <span className=\"cli\">\r\n                    {' '}\r\n                    sungmin.<span className=\"method\">getDate</span>();\r\n                </span>\r\n            </li>\r\n            <li className=\"console-item response\">\r\n                <i className=\"fa fa-angle-left\"></i>\r\n                <span className=\"cli info\">{birth}</span>\r\n            </li>\r\n            <li className=\"console-item\">\r\n                <i className=\"fa fa-angle-right\"></i>\r\n                <span className=\"cli\">\r\n                    {' '}\r\n                    sungmin.<span className=\"method\">getUniversity</span>();\r\n                </span>\r\n            </li>\r\n            <li className=\"console-item response\">\r\n                <i className=\"fa fa-angle-left\"></i>\r\n                <span className=\"cli info\">{university}</span>\r\n            </li>\r\n            <li className=\"console-item\">\r\n                <i className=\"fa fa-angle-right\"></i>\r\n                <span className=\"cli\">\r\n                    {' '}\r\n                    sungmin.<span className=\"method\">getCompany</span>();\r\n                </span>\r\n            </li>\r\n            <li className=\"console-item response undefined\">\r\n                <i className=\"fa fa-angle-left\"></i>\r\n                <span className=\"cli\">undefined</span>\r\n            </li>\r\n            <li className=\"console-item \">\r\n                <i className=\"fa fa-angle-right\"></i>\r\n                <span className={cn(\"underbar\", {hidden: underbarHidden})}>\r\n                    <span className=\"cli\">__</span>\r\n                </span>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ConsoleInfo;\r\n","import './Card.scss';\r\n\r\ninterface CardProps {\r\n    job: string;\r\n    name: string;\r\n    phone: string;\r\n    email: string;\r\n    github: string;\r\n}\r\n\r\nfunction Card({ job, name, phone, email, github }: CardProps) {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-introduce\">\r\n                <div className=\"card-title\">\r\n                    <p className=\"job\">{job}</p>\r\n                    <p className=\"name\">{name}</p>\r\n                </div>\r\n                <div>\r\n                    <p className=\"card-phone\">\r\n                        <i className=\"fa fa-mobile\"></i>\r\n                        {phone}\r\n                    </p>\r\n                    <p className=\"card-email\">\r\n                        <i className=\"fa fa-envelope\"></i>\r\n                        {email}\r\n                    </p>\r\n                    <p className=\"card-github\">\r\n                        <i className=\"fa fa-github\"></i>\r\n                        {github}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"profile-image\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import SectionWrapper from '../section/SectionWrapper';\r\nimport ConsoleInfo from './ConsoleInfo';\r\nimport Card from './Card';\r\nimport MyInfo from '../../static/data/myinfo.json';\r\nimport './About.scss';\r\n\r\nfunction About() {\r\n    const { name, phone, email, github, birth, university, job } = MyInfo;\r\n    return (\r\n        <SectionWrapper id={'about'} title={'About'}>\r\n            <p>\r\n                항상 제가 하는 일들이 사람들에게 좀 더 나은 삶을 주었으면 하였고, 일반적인 일들을 통해서는 그 한계가 명확하다고 느낄 수 있었습니다.\r\n                그러던 도중 프로그래밍이라는 것을 접하게 되었고, 프로그래밍을 통해 사람들에게 이로운 서비스를 개발하고 우리의 인생이라는 한정된 시간\r\n                안에서 사람들이 시간을 좀 더 가치 있게 쓸 수 있도록 해주고 싶었습니다.\r\n            </p>\r\n            <div className=\"about-wrapper\">\r\n                <Card job={job} name={name} phone={phone} email={email} github={github}></Card>\r\n                <ConsoleInfo name={name} birth={birth} university={university}></ConsoleInfo>\r\n            </div>\r\n        </SectionWrapper>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport SectionWrapper from '../section/SectionWrapper';\r\nimport SkillList from '../../static/data/skills.json';\r\nimport './Skills.scss';\r\n\r\ninterface SkillProps {\r\n    title: string;\r\n    content: string;\r\n    color: string;\r\n    percent: number;\r\n}\r\n\r\nfunction SkillItem({ title, content, color, percent }: SkillProps) {\r\n    const [active, setActive] = useState<boolean>(false);\r\n    const progressBarRef = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n        const progressAnimation = () => {\r\n            const fromTop: number | undefined = progressBarRef.current?.getBoundingClientRect().top;\r\n            if (!fromTop) {\r\n                return;\r\n            }\r\n            else if (window.innerHeight > fromTop) {\r\n                setActive(true);\r\n            }\r\n        };\r\n        window.addEventListener('scroll', progressAnimation);\r\n        return window.addEventListener('scroll', progressAnimation);\r\n    }, [percent]);\r\n    return (\r\n        <div>\r\n            <h3>{title}</h3>\r\n            <div className=\"progress\">\r\n                <div className=\"progress-bar\" style={{ width: !active ? '0%' : `${percent}%`, backgroundColor: color }} ref={progressBarRef}>\r\n                <span className=\"progress-percent\" style={{ display: !active ? 'none' : `inline`, color }}>\r\n                    {`${percent}%`}\r\n                </span>\r\n                </div>\r\n            </div>\r\n            <p>{content}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Skills() {\r\n    return (\r\n        <SectionWrapper id={'skills'} title={'Skills'}>\r\n            <ul className=\"skill-wrapper\">\r\n                {SkillList.map(({ title, content, color, percent }, index) => (\r\n                    <li className=\"skill\" key={index}>\r\n                        <SkillItem title={title} content={content} color={color} percent={percent} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </SectionWrapper>\r\n    );\r\n}\r\n\r\nexport default Skills;\r\n","import cn from 'classnames';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Pagination, Navigation } from 'swiper';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport './DetailDialog.scss';\r\n\r\nSwiperCore.use([Pagination, Navigation]);\r\n\r\nexport interface DialogInfo {\r\n    title: string;\r\n    subtitle: string;\r\n    description: string;\r\n    images: string[];\r\n    github: string;\r\n    techList: string[];\r\n}\r\n\r\ninterface DetailDialogProps extends DialogInfo {\r\n    on: boolean;\r\n    offDialog: () => void;\r\n}\r\n\r\nfunction DetailDialog({ on, title, subtitle, description, images, offDialog, github, techList }: DetailDialogProps) {\r\n    return (\r\n        <div className={cn('modal', { on })}>\r\n            <div className=\"modal-overlay\" onClick={offDialog}></div>\r\n            <div className=\"modal-content\">\r\n                {on && (\r\n                    <Swiper\r\n                        className=\"modal-image-wrapper\"\r\n                        spaceBetween={50}\r\n                        navigation\r\n                        pagination={{ clickable: true }}\r\n                    >\r\n                        {images.map((image, index) => (\r\n                            <SwiperSlide className=\"modal-image-slider\" key={index}>\r\n                                <img src={process.env.PUBLIC_URL + image} alt=\"detail\" className=\"modal-image\" />\r\n                            </SwiperSlide>\r\n                        ))}\r\n                    </Swiper>\r\n                )}\r\n                <div className=\"modal-info\">\r\n                    <section className=\"modal-section-wrapper\">\r\n                        <h2 className=\"modal-title\">{title}</h2>\r\n                        <h3 className=\"modal-subtitle\">{subtitle}</h3>\r\n                    </section>\r\n                    <section className=\"modal-section-wrapper\">\r\n                        <h3>Tech</h3>\r\n                        <p className=\"modal-tech-list\">{techList.join(' / ')}/</p>\r\n                    </section>\r\n                    <p className=\"modal-description\">{description}</p>\r\n                    <a className=\"modal-github-link\" href={github} target=\"_blank\" rel=\"noreferrer\">\r\n                        <div className=\"modal-github\">\r\n                            <i className=\"fa fa-github\"></i>\r\n                            <span>바로가기</span>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                <span className=\"modal-close\" onClick={offDialog}>\r\n                    <i className=\"fa fa-times\"></i>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailDialog;\r\n","import { useState, useCallback } from 'react';\r\nimport SectionWrapper from '../section/SectionWrapper';\r\nimport DetailDialog, { DialogInfo } from './DetailDialog';\r\nimport ProjectList from '../../static/data/projects.json';\r\nimport './Projects.scss';\r\n\r\ninterface ProjectItemProps {\r\n    title: string;\r\n    subtitle: string;\r\n    techList: string[];\r\n    background: string;\r\n    onDetail: () => void;\r\n}\r\n\r\nfunction ProjectItem({ title, subtitle, techList, background, onDetail }: ProjectItemProps) {\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"project-image\"\r\n                style={{ backgroundImage: `url(${process.env.PUBLIC_URL + background})` }}\r\n            ></div>\r\n            <div className=\"project-content\">\r\n                <div className=\"project-title-wrapper\">\r\n                    <h2>{title}</h2>\r\n                    <h3>{subtitle}</h3>\r\n                </div>\r\n                <span className=\"project-tech\">{techList.join('/')}</span>\r\n                <button className=\"project-more\" onClick={onDetail}>\r\n                    MORE\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Projects() {\r\n    const [onDialog, setOnDialog] = useState<boolean>(false);\r\n    const [dialogContent, setDialogContent] = useState<DialogInfo>({\r\n        title: '',\r\n        subtitle: '',\r\n        description: '',\r\n        images: [],\r\n        github: '',\r\n        techList: [],\r\n    });\r\n    const openDialog = useCallback((dialogInfo: DialogInfo) => {\r\n        console.log(dialogInfo);\r\n        setDialogContent(dialogInfo);\r\n        setOnDialog(true);\r\n    }, []);\r\n    const offDialog = useCallback(() => setOnDialog(false), []);\r\n    const { title, subtitle, description, images, github, techList }: DialogInfo = dialogContent;\r\n    console.log(images);\r\n    return (\r\n        <>\r\n            <SectionWrapper id={'projects'} title={'Projects'}>\r\n                <ul className=\"project-list\">\r\n                    {ProjectList.map((project, index) => {\r\n                        const { title, subtitle, techList, images, description, background, github } = project;\r\n                        return (\r\n                            <li className=\"project\" key={index}>\r\n                                <ProjectItem\r\n                                    title={title}\r\n                                    subtitle={subtitle}\r\n                                    techList={techList}\r\n                                    background={background}\r\n                                    onDetail={() => openDialog({ title, subtitle, description, images, github, techList })}\r\n                                />\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </SectionWrapper>\r\n            <DetailDialog\r\n                on={onDialog}\r\n                title={title}\r\n                subtitle={subtitle}\r\n                description={description}\r\n                images={images}\r\n                github={github}\r\n                techList={techList}\r\n                offDialog={offDialog}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Projects;\r\n","import './Footer.scss'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer id=\"footer\">\r\n            <p className=\"copyright\">© Sungmin Jo 2020, All rights reserved.</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import cn from 'classnames';\r\nimport { useCallback } from 'react';\r\nimport { scrolltoLink } from '../../lib/scroll';\r\nimport SectionList from '../../static/data/sections.json';\r\n\r\nimport './ArrowUp.scss';\r\n\r\ninterface ArrowUpProps {\r\n    activeArrow: boolean;\r\n}\r\n\r\nfunction ArrowUp({ activeArrow }: ArrowUpProps) {\r\n    const handleArrowUp = useCallback(() => scrolltoLink(SectionList[0].toLocaleLowerCase()), []);\r\n    return (\r\n        <div className={cn('arrow-up', { activeArrow })} onClick={handleArrowUp}>\r\n            <i className=\"fa fa-angle-double-up\"></i>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ArrowUp;\r\n","import { useEffect, useMemo, useState, useCallback, useRef } from 'react';\r\nimport Sections from '../static/data/sections.json';\r\n\r\nexport function useHeaderActive(): boolean {\r\n    const [headerActive, setHeaderActive] = useState<boolean>(false);\r\n    useEffect(() => {\r\n        const header = document.getElementById('header');\r\n        const headerHeight = header?.getBoundingClientRect().height;\r\n        function handleHeaderScroll() {\r\n            if (headerHeight) {\r\n                if (window.scrollY > headerHeight) {\r\n                    setHeaderActive(true);\r\n                } else {\r\n                    setHeaderActive(false);\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener('scroll', () => handleHeaderScroll());\r\n        return window.removeEventListener('scroll', () => handleHeaderScroll());\r\n    }, []);\r\n    return headerActive;\r\n}\r\n\r\nconst options = {\r\n    root: null,\r\n    rootMargin: '0px',\r\n    threshold: 0.5,\r\n};\r\nconst sections = Sections.map((section) => section.toLocaleLowerCase());\r\n\r\nexport function useHeaderScroll(): void {\r\n    const navList = useRef<NodeListOf<Element> | null>(null);\r\n    const sectionList = useRef<HTMLElement[]>([]);\r\n    const selectedNavItem = useRef<Element | null>(null);\r\n\r\n    const activeNavItem = (selected: Element) => {\r\n        selectedNavItem.current?.classList.remove('active');\r\n        selectedNavItem.current = selected;\r\n        selectedNavItem.current?.classList.add('active');\r\n    };\r\n\r\n    const callback = useCallback((entries: IntersectionObserverEntry[]) => {\r\n        entries.forEach((entry) => {\r\n            const { isIntersecting, intersectionRatio, boundingClientRect } = entry;\r\n            if (!isIntersecting && intersectionRatio > 0) {\r\n                const { id } = entry.target;\r\n                const index = sections.indexOf(id);\r\n                const selectedNavIndex: number = boundingClientRect.y < 0 ? index + 1 : index - 1;\r\n                if (navList.current) {\r\n                    activeNavItem(navList.current[selectedNavIndex]);\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const observer = useMemo(() => new IntersectionObserver(callback, options), [callback]);\r\n\r\n    useEffect(() => {\r\n        navList.current = document.querySelectorAll('.navbar-menu-item');\r\n        sections.forEach((section) => {\r\n            const sectionElement = document.getElementById(section);\r\n            if (sectionElement) {\r\n                sectionList.current.push(sectionElement);\r\n            }\r\n        });\r\n        selectedNavItem.current = navList.current[0];\r\n        sectionList.current.forEach((section) => observer.observe(section));\r\n    }, [observer]);\r\n\r\n    useEffect(() => {\r\n        const scrollController = () => {\r\n            if (window.scrollY === 0) {\r\n                selectedNavItem.current?.classList.remove('active');\r\n            }\r\n        };\r\n        window.addEventListener('scroll', () => scrollController());\r\n        return window.removeEventListener('scroll', () => scrollController());\r\n    }, []);\r\n}\r\n","import React from \"react\";\nimport Header from \"./components/header/Header\";\nimport Home from \"./components/home/Home\";\nimport About from './components/about/About';\nimport Skills from \"./components/skills/Skills\";\nimport Projects from './components/projects/Projects';\nimport Contact from './components/contact/Contact';\nimport Footer from './components/footer/Footer';\nimport ArrowUp from \"./components/arrowup/ArrowUp\";\nimport { useHeaderActive, useHeaderScroll } from './hooks/useHeader';\nimport \"./App.scss\";\n\nfunction App() {\n    const headerActive: boolean = useHeaderActive();\n    useHeaderScroll();\n    return (\n        <>\n            <Header active={headerActive}/>\n            <Home />\n            <About />\n            <Skills/>\n            <Projects/>\n            <Contact/>\n            <Footer/> \n            <ArrowUp activeArrow={headerActive}/>\n        </>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('sungmin')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}